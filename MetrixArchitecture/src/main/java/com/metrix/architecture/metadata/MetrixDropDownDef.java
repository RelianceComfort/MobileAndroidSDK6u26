package com.metrix.architecture.metadata;

import com.metrix.architecture.utilities.AndroidResourceHelper;

/**
 * Constrains the meta data used to describe how a spinner should be populated.
 * This can either be generated by certain overloads of MetrixColumnDef or can
 * be done directly for non-data bound spinners.
 */
public class MetrixDropDownDef {

	/**
	 * The name of the table containing data the spinner should be populated
	 * with.
	 */
	public String tableName;

	/**
	 * The column that should be displayed by the spinner in it's display/value
	 * pair.
	 */
	public String displayColumn;

	/**
	 * The value that should be used by the spinner in it's display/value pair.
	 */
	public String valueColumn;

	/**
	 * A column to filter the data being used to populate the spinner.
	 */
	public String filterColumn;

	/**
	 * Data to be used when building the filter to populate the spinner.
	 */
	public String filterValue;

	/**
	 * Allows you to specify the order by for the query used to populate the spinner.
	 *  
	 *  @since 5.6 Patch 2
	 */
	public MetrixOrderByDef orderBy;
	
	/**
	 * The R.id of the spinner to populate.
	 */
	public int controlId;

	/**
	 * A convenience constructor.
	 * 
	 */
	public MetrixDropDownDef() {
	}

	/**
	 * A convenience constructor.
	 * 
	 * @param tableName
	 *            The name of the table containing data the spinner should be
	 *            populated with.
	 * @param displayColumn
	 *            The column that should be displayed by the spinner in it's
	 *            display/value pair.
	 * @param valueColumn
	 *            The value that should be used by the spinner in it's
	 *            display/value pair.
	 */
	public MetrixDropDownDef(String tableName, String displayColumn, String valueColumn) {
		this.tableName = tableName;
		this.displayColumn = displayColumn;
		this.valueColumn = valueColumn;
	}

	/**
	 * A convenience constructor.
	 * 
	 * @param controlId
	 *            The R.id of the spinner to populate.
	 * @param tableName
	 *            The name of the table containing data the spinner should be
	 *            populated with.
	 * @param displayColumn
	 *            The column that should be displayed by the spinner in it's
	 *            display/value pair.
	 * @param valueColumn
	 *            The value that should be used by the spinner in it's
	 *            display/value pair.
	 */
	public MetrixDropDownDef(int controlId, String tableName, String displayColumn, String valueColumn) {
		this.controlId = controlId;
		this.tableName = tableName;
		this.displayColumn = displayColumn;
		this.valueColumn = valueColumn;
	}

	/**
	 * A convenience constructor.
	 * 
	 * @param tableName
	 *            The name of the table containing data the spinner should be
	 *            populated with.
	 * @param displayColumn
	 *            The column that should be displayed by the spinner in it's
	 *            display/value pair.
	 * @param valueColumn
	 *            The value that should be used by the spinner in it's
	 *            display/value pair.
	 * @param filterColumn
	 *            A column to filter the data being used to populate the
	 *            spinner.
	 * @param filterValue
	 *            Data to be used when building the filter to populate the
	 *            spinner.
	 */
	public MetrixDropDownDef(String tableName, String displayColumn, String valueColumn, String filterColumn, String filterValue) {
		this.tableName = tableName;
		this.displayColumn = displayColumn;
		this.valueColumn = valueColumn;
		this.filterColumn = filterColumn;
		this.filterValue = filterValue;
	}

	/**
	 * A convenience constructor.
	 * 
	 * @param tableName
	 *            The name of the table containing data the spinner should be
	 *            populated with.
	 * @param displayColumn
	 *            The column that should be displayed by the spinner in it's
	 *            display/value pair.
	 * @param valueColumn
	 *            The value that should be used by the spinner in it's
	 *            display/value pair.
	 * @param filterColumn
	 *            A column to filter the data being used to populate the
	 *            spinner.
	 * @param filterValue
	 *            Data to be used when building the filter to populate the
	 *            spinner.
	 * @param orderBy
	 * 	 		  An order by to apply to the data being used to populate the
	 * 			  spinner.
	 *  
	 *  @since 5.6 Patch 2
	 */
	public MetrixDropDownDef(String tableName, String displayColumn, String valueColumn, String filterColumn, String filterValue, MetrixOrderByDef orderBy) {
		this.tableName = tableName;
		this.displayColumn = displayColumn;
		this.valueColumn = valueColumn;
		this.filterColumn = filterColumn;
		this.filterValue = filterValue;
		this.orderBy = orderBy;
	}

	/**
	 * A convenience constructor.
	 * 
	 * @param controlId
	 *            The R.id of the spinner to populate.
	 * @param tableName
	 *            The name of the table containing data the spinner should be
	 *            populated with.
	 * @param displayColumn
	 *            The column that should be displayed by the spinner in it's
	 *            display/value pair.
	 * @param valueColumn
	 *            The value that should be used by the spinner in it's
	 *            display/value pair.
	 * @param filterColumn
	 *            A column to filter the data being used to populate the
	 *            spinner.
	 * @param filterValue
	 *            Data to be used when building the filter to populate the
	 *            spinner.
	 */
	public MetrixDropDownDef(int controlId, String tableName, String displayColumn, String valueColumn, String filterColumn, String filterValue) {
		this.controlId = controlId;
		this.tableName = tableName;
		this.displayColumn = displayColumn;
		this.valueColumn = valueColumn;
		this.filterColumn = filterColumn;
		this.filterValue = filterValue;
	}

	/**
	 * A convenience constructor.
	 * 
	 * @param controlId
	 *            The R.id of the spinner to populate.
	 * @param tableName
	 *            The name of the table containing data the spinner should be
	 *            populated with.
	 * @param displayColumn
	 *            The column that should be displayed by the spinner in it's
	 *            display/value pair.
	 * @param valueColumn
	 *            The value that should be used by the spinner in it's
	 *            display/value pair.
	 * @param filterColumn
	 *            A column to filter the data being used to populate the
	 *            spinner.
	 * @param filterValue
	 *            Data to be used when building the filter to populate the
	 *            spinner.
	 * @param orderBy
	 * 			  An order by to apply to the data being used to populate the
	 * 			  spinner.
	 *  
	 *  @since 5.6 Patch 2
	 */
	public MetrixDropDownDef(int controlId, String tableName, String displayColumn, String valueColumn, String filterColumn, String filterValue, MetrixOrderByDef orderBy) {
		this.controlId = controlId;
		this.tableName = tableName;
		this.displayColumn = displayColumn;
		this.valueColumn = valueColumn;
		this.filterColumn = filterColumn;
		this.filterValue = filterValue;
		this.orderBy = orderBy;
	}

	@Override
	public String toString() {
		StringBuilder value = new StringBuilder();

		value.append(AndroidResourceHelper.getMessage("TableName1Args", this.tableName));
		value.append(", ");
		value.append(AndroidResourceHelper.getMessage("DisplayColumn1Args", this.displayColumn));
		value.append(", ");
		value.append(AndroidResourceHelper.getMessage("ValueColumn1Args", this.valueColumn));

		return value.toString();
	}
}
